; vim: ft=clojure
(defmacro comment (& xs) nil)

(defmacro do (& xs)
  (list
    (cons 'fn (cons '() xs))))

; TODO: looks like we're having reader issues here too
(prn (macroexpand '(do (prn 1) (prn 2))))

(defmacro if
  (pred conse & alt)
  (cond alt
    (list 'cond pred conse 'else (car alt))
    else
      (list 'cond pred conse)))

(defmacro defn
  (name args & body)
  (list 'def
    name
    (cons 'fn (cons args body))))

(defn identity (x) x)
; TODO: fix reader bug it's being read as (fn (x) (fn ()) x)
(def always (fn (x) (fn () x)))

(is 1 (identity 1) "(identity 1)")
(is 1 ((always 1)) "((always 1))")

(comment
(defn map
  (f l)
  (loop (x (car l) xs nil)
    (cond
      (nil? l) xs
      else
        (cons (f (car l)) (cdr l)))))
)
